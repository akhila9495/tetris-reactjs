{"map":"{\"version\":3,\"sources\":[\"/home/akhil/Documents/tetris-reactjs/src/gameHelpers.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/styles/StyledTetris.js\",\"/home/akhil/Documents/tetris-reactjs/src/tetrominos.js\",\"/home/akhil/Documents/tetris-reactjs/src/hooks/useStage.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/styles/StyledStage.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/styles/StyledCell.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/Cell.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/Stage.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/styles/StyledDisplay.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/Display.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/styles/StyledStartButton.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/StartButton.js\",\"/home/akhil/Documents/tetris-reactjs/src/components/Tetris.js\",\"/home/akhil/Documents/tetris-reactjs/src/hooks/usePlayer.js\",\"/home/akhil/Documents/tetris-reactjs/src/hooks/useGameStatus.js\",\"/home/akhil/Documents/tetris-reactjs/src/hooks/useInterval.js\",\"/home/akhil/Documents/tetris-reactjs/src/App.js\",\"/home/akhil/Documents/tetris-reactjs/src/serviceWorker.js\",\"/home/akhil/Documents/tetris-reactjs/src/index.js\",\"/home/akhil/Documents/tetris-reactjs/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/akhil/Documents/tetris-reactjs/src/img/bg.png\"],\"names\":[\"createStage\",\"Array\",\"from\",\"fill\",\"checkCollision\",\"player\",\"stage\",\"_ref\",\"moveX\",\"x\",\"moveY\",\"y\",\"tetromino\",\"length\",\"pos\",\"StyledTetrisWrapper\",\"styled\",\"div\",\"_templateObject\",\"bgImage\",\"StyledTetris\",\"_templateObject2\",\"TETROMINOS\",\"0\",\"shape\",\"color\",\"I\",\"J\",\"L\",\"O\",\"S\",\"T\",\"Z\",\"randomTetromino\",\"randTetromino\",\"Math\",\"floor\",\"random\",\"useStage\",\"resetPlayer\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"setStage\",\"_useState3\",\"_useState4\",\"rowsCleared\",\"setRowsCleared\",\"useEffect\",\"updateStage\",\"prevStage\",\"newStage\",\"map\",\"row\",\"cell\",\"forEach\",\"value\",\"concat\",\"collided\",\"reduce\",\"ack\",\"findIndex\",\"prev\",\"unshift\",\"push\",\"sweepRows\",\"StyledStage\",\"StyledStage_templateObject\",\"props\",\"height\",\"width\",\"StyledCell\",\"StyledCell_templateObject\",\"type\",\"React\",\"memo\",\"react_default\",\"a\",\"createElement\",\"Stage\",\"components_Cell\",\"key\",\"StyledDisplay\",\"StyledDisplay_templateObject\",\"gameOver\",\"Display\",\"text\",\"StyledStartButton\",\"button\",\"StyledStartButton_templateObject\",\"StartButton\",\"callback\",\"onClick\",\"Tetris\",\"dropTime\",\"setDropTime\",\"setGameOver\",\"_usePlayer\",\"setPlayer\",\"rotate\",\"matrix\",\"dir\",\"rotatedTetro\",\"_\",\"index\",\"col\",\"reverse\",\"useCallback\",\"STAGE_WIDTH\",\"objectSpread\",\"clonedPlayer\",\"JSON\",\"parse\",\"stringify\",\"offset\",\"lenght\",\"usePlayer\",\"_usePlayer2\",\"updatePlayerPos\",\"playerRotate\",\"_useStage\",\"_useStage2\",\"_useGameStatus\",\"score\",\"setScore\",\"rows\",\"setRows\",\"_useState5\",\"_useState6\",\"level\",\"setLevel\",\"linePoints\",\"calcScore\",\"useGameStatus\",\"_useGameStatus2\",\"movePlayer\",\"drop\",\"move\",\"_ref2\",\"keyCode\",\"delay\",\"savedCallback\",\"useRef\",\"current\",\"id\",\"setInterval\",\"clearInterval\",\"useInterval\",\"role\",\"tabIndex\",\"onKeyDown\",\"e\",\"onKeyUp\",\"keyUp\",\"components_Stage\",\"components_Display\",\"components_StartButton\",\"App\",\"className\",\"components_Tetris\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"export const STAGE_WIDTH = 12;\\nexport const STAGE_HEIGHT = 20;\\n\\nexport const createStage = () =>\\n  Array.from(Array(STAGE_HEIGHT), () =>\\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\\n  );\\n\\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\\n  for (let y = 0; y < player.tetromino.length; y += 1) {\\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\\n      // 1. Check that we're on an actual Tetromino cell\\n      if (player.tetromino[y][x] !== 0) {\\n        if (\\n          // 2. Check that our move is inside the game areas height (y)\\n          // We shouldn't go through the bottom of the play area\\n          !stage[y + player.pos.y + moveY] ||\\n          // 3. Check that our move is inside the game areas width (x)\\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\\n          // 4. Check that the cell wer'e moving to isn't set to clear\\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\\n            'clear'\\n        ) {\\n          return true;\\n        }\\n      }\\n    }\\n  }\\n};\\n\",\"import styled from 'styled-components';\\n\\nimport bgImage from '../../img/bg.png';\\n\\nexport const StyledTetrisWrapper = styled.div`\\n  width: 100vw;\\n  height: 100vh;\\n  background: url(${bgImage}) #000;\\n  background-size: cover;\\n  overflow: hidden;\\n`;\\n\\nexport const StyledTetris = styled.div`\\n  display: flex;\\n  align-items: flex-start;\\n  padding: 40px;\\n  margin: 0 auto;\\n  max-width: 900px;\\n\\n  aside {\\n    width: 100%;\\n    max-width: 200px;\\n    display: block;\\n    padding: 0 20px;\\n  }\\n`;\\n\",\"export const TETROMINOS = {\\n  0: { shape: [[0]], color: '0, 0, 0' },\\n  I: {\\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\\n    color: '80, 227, 230',\\n  },\\n  J: {\\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\\n    color: '36, 95, 223',\\n  },\\n  L: {\\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\\n    color: '223, 173, 36',\\n  },\\n  O: {\\n    shape: [['O', 'O'], ['O', 'O']],\\n    color: '223, 217, 36',\\n  },\\n  S: {\\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\\n    color: '48, 211, 56',\\n  },\\n  T: {\\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\\n    color: '132, 61, 198',\\n  },\\n  Z: {\\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\\n    color: '227, 78, 78',\\n  },\\n};\\n\\nexport const randomTetromino = () => {\\n  const tetrominos = 'IJLOSTZ';\\n  const randTetromino =\\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\\n  return TETROMINOS[randTetromino];\\n};\\n\",\"import { useState, useEffect } from 'react';\\nimport { createStage } from '../gameHelpers';\\n\\nexport const useStage = (player, resetPlayer) => {\\n  const [stage, setStage] = useState(createStage());\\n  const [rowsCleared, setRowsCleared] = useState(0);\\n\\n  useEffect(() => {\\n    setRowsCleared(0);\\n\\n    const sweepRows = newStage =>\\n      newStage.reduce((ack, row) => {\\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\\n          setRowsCleared(prev => prev + 1);\\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\\n          return ack;\\n        }\\n        ack.push(row);\\n        return ack;\\n      }, [])\\n\\n    const updateStage = prevStage => {\\n      // First flush the stage\\n      const newStage = prevStage.map(row =>\\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\\n      );\\n\\n      // Then draw the tetromino\\n      player.tetromino.forEach((row, y) => {\\n        row.forEach((value, x) => {\\n          if (value !== 0) {\\n            newStage[y + player.pos.y][x + player.pos.x] = [\\n              value,\\n              `${player.collided ? 'merged' : 'clear'}`,\\n            ];\\n          }\\n        });\\n      });\\n      // Then check if we collided\\n      if (player.collided) {\\n        resetPlayer();\\n        return sweepRows(newStage);\\n      }\\n      return newStage;\\n    };\\n\\n    setStage(prev => updateStage(prev));\\n  }, [player, resetPlayer]);\\n\\n  return [stage, setStage, rowsCleared];\\n};\",\"import styled from 'styled-components';\\n\\nexport const StyledStage = styled.div`\\n  display: grid;\\n  grid-template-rows: repeat(\\n    ${props => props.height},\\n    calc(25vw / ${props => props.width})\\n  );\\n  grid-template-columns: repeat(${props => props.width}, 1fr);\\n  grid-gap: 1px;\\n  border: 2px solid #333;\\n  width: 100%;\\n  max-width: 25vw;\\n  background: #111;\\n`;\",\"import styled from 'styled-components';\\n\\nexport const StyledCell = styled.div`\\n  width: auto;\\n  background: rgba(${props => props.color}, 0.8);\\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\\n  border-bottom-color: rgba(${props => props.color}, 0.1);\\n  border-right-color: rgba(${props => props.color}, 1);\\n  border-top-color: rgba(${props => props.color}, 1);\\n  border-left-color: rgba(${props => props.color}, 0.3);\\n`\",\"import React from 'react';\\nimport { StyledCell } from './styles/StyledCell';\\nimport { TETROMINOS } from '../tetrominos';\\n\\nconst Cell = ({ type }) => (\\n  <StyledCell type={type} color={TETROMINOS[type].color} />\\n)\\n\\nexport default React.memo(Cell);\",\"import React from 'react';\\nimport { StyledStage } from './styles/StyledStage';\\n\\nimport Cell from './Cell';\\n\\nconst Stage = ({ stage }) => (\\n  <StyledStage width={stage[0].length} height={stage.length}>\\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\\n  </StyledStage>\\n);\\n\\nexport default Stage;\\n\",\"import styled from 'styled-components';\\n\\nexport const StyledDisplay = styled.div`\\n  box-sizing: border-box;\\n  display: flex;\\n  align-items: center; \\n  margin: 0 0 20px 0;\\n  padding: 20px;\\n  border: 4px solid #333;\\n  min-height: 30px;\\n  width: 100%;\\n  border-radius: 20px;\\n  color: ${props => (props.gameOver ? 'red' : '#999')};\\n  background: #000;\\n  font-family: Pixel, Arial, Helvetica, sans-serif;\\n  font-size: 0.8rem;\\n`;\",\"import React from 'react';\\nimport { StyledDisplay } from './styles/StyledDisplay';\\n\\nconst Display = ({ gameOver, text }) => (\\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\\n)\\n\\nexport default Display;\",\"import styled from 'styled-components';\\n\\nexport const StyledStartButton = styled.button`\\n  box-sizing: border-box;\\n  margin: 0 0 20px 0;\\n  padding: 20px;\\n  min-height: 30px;\\n  width: 100%;\\n  border-radius: 20px;\\n  border: none;\\n  color: white;\\n  background: #333;\\n  font-family: Pixel, Arial, Helvetica, sans-serif;\\n  font-size: 1rem;\\n  outline: none;\\n  cursor: pointer;\\n`\",\"import React from 'react';\\nimport { StyledStartButton } from './styles/StyledStartButton';\\n\\nconst StartButton = ({ callback }) => (\\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\\n)\\n\\nexport default StartButton;\",\"import React, { useState } from 'react';\\n\\nimport { createStage, checkCollision } from '../gameHelpers';\\n\\n// Styled Components\\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\\n\\n// Custom Hooks\\nimport { usePlayer } from '../hooks/usePlayer';\\nimport { useStage } from '../hooks/useStage';\\nimport { useInterval } from '../hooks/useInterval';\\nimport { useGameStatus } from '../hooks/useGameStatus';\\n\\n// Components\\nimport Stage from './Stage';\\nimport Display from './Display';\\nimport StartButton from './StartButton';\\n\\nconst Tetris = () => {\\n  const [dropTime, setDropTime] = useState(null);\\n  const [gameOver, setGameOver] = useState(false);\\n\\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\\n\\n\\n\\n  const movePlayer = dir => {\\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\\n      updatePlayerPos({ x: dir, y: 0 });\\n    }\\n  }\\n\\n  const startGame = () => {\\n    \\n    // Reset everything\\n    setStage(createStage());\\n    setDropTime(1000);\\n    resetPlayer();\\n    setGameOver(false);\\n    setScore(0);\\n    setRows(0);\\n    setLevel(0);\\n    \\n\\n  }\\n\\n  const drop = () => {\\n    if (rows > (level + 1)+10){\\n      \\n      setDropTime(1000/(level+1)+100);//found in internet\\n\\n    }\\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\\n      updatePlayerPos({ x: 0, y: 1, collided: false })\\n    } else {\\n      // Game Over\\n      if (player.pos.y < 1) {\\n        //console.log(\\\"GAME OVER!!!\\\");\\n        setGameOver(true);\\n        setDropTime(null);\\n      }\\n      updatePlayerPos({ x: 0, y: 0, collided: true });\\n    }\\n  }\\n  const keyUp = ({ keyCode }) => {\\n    if (!gameOver) {\\n      if (keyCode === 40) {\\n        setDropTime(1000/(level+1)+100);\\n\\n      }\\n    }\\n\\n  }\\n  const dropPlayer = () => {\\n    setDropTime(null);\\n    drop();\\n  }\\n\\n  const move = ({ keyCode }) => {\\n    if (!gameOver) {\\n      if (keyCode === 37) {\\n        movePlayer(-1);\\n      } else if (keyCode === 39) {\\n        movePlayer(1);\\n      } else if (keyCode === 40) {\\n        dropPlayer();\\n      } else if (keyCode === 38) {\\n        playerRotate(stage, 1);\\n      }\\n    }\\n  }\\n  useInterval(() => {\\n    drop();\\n  }, dropTime)\\n\\n  return (\\n    <StyledTetrisWrapper role=\\\"button\\\" tabIndex=\\\"0\\\" onKeyDown={e => move(e)} onKeyUp={e => keyUp(e)}>\\n      <StyledTetris>\\n        <Stage stage={stage} />\\n        <aside>\\n          {gameOver ? (\\n            <Display gameOver = {gameOver} text=\\\"Game Over\\\"/>\\n          ) : (\\n            <div>\\n              <Display text={`Score: ${score}`} />\\n              <Display text={`Rows: ${rows}`} />\\n              <Display text={`Level: ${level}`} />\\n            </div>\\n          )}\\n          <StartButton callback={startGame} />\\n        </aside>\\n      </StyledTetris>\\n    </StyledTetrisWrapper>\\n  );\\n};\\n\\nexport default Tetris;\\n\",\"import { useState, useCallback } from 'react';\\n\\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\\n\\nexport const usePlayer = () => {\\n  const [player, setPlayer] = useState({\\n    pos: { x: 0, y: 0 },\\n    tetromino: TETROMINOS[0].shape,\\n    collided: false,\\n  });\\n\\n  const updatePlayerPos = ({ x, y, collided }) => {\\n    setPlayer(prev => ({\\n      ...prev,\\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\\n      collided,\\n    }))\\n  }\\n  const rotate = (matrix, dir) => {\\n    //make the rows to become columns i.e, transpose \\n    const rotatedTetro = matrix.map(\\n      (_, index) => matrix.map(col => col[index]),\\n    );\\n    //reverse each row to get a rotated matrix\\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\\n    return rotatedTetro.reverse();\\n  }\\n\\n  const playerRotate = (stage, dir) => {\\n    const clonedPlayer = JSON.parse(JSON.stringify(player))\\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino)\\n\\n    const pos = clonedPlayer.pos.x;\\n    let offset = 1;\\n    while(checkCollision(clonedPlayer, stage,{x:0,y:0})){\\n      clonedPlayer.pos.x += offset;\\n      offset = -(offset +(offset > 0?1:-1));  //back and forth rotation\\n      if (offset > clonedPlayer.tetromino[0].lenght){\\n        rotate(clonedPlayer.tetromino,-dir);\\n        clonedPlayer.pos.x =pos;\\n        return;\\n\\n      }\\n\\n    }\\n\\n    setPlayer(clonedPlayer)\\n\\n  }\\n\\n  const resetPlayer = useCallback(() => {\\n    setPlayer({\\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\\n      tetromino: randomTetromino().shape,\\n      collided: false,\\n    })\\n  }, [])\\n\\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\\n}\",\"import { useState, useEffect, useCallback } from \\\"react\\\";\\n\\nexport const useGameStatus = rowsCleared => {\\n    const [score, setScore] = useState(0);\\n    const [rows, setRows] = useState(0);\\n    const [level, setLevel] = useState(0);\\n\\n    const linePoints = [40, 100, 500, 1200];//score from wikipedia\\n    const calcScore = useCallback(() => {\\n        // check id we have score\\n        if (rowsCleared > 0) {\\n            //original tetris score calculator frm online\\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\\n            setLevel(prev => prev +1)\\n            setRows(prev => prev + rowsCleared);\\n        }\\n    },[level,linePoints,rowsCleared]);\\n    useEffect(()=>{\\n        calcScore();\\n\\n    },[calcScore,rowsCleared,score]);\\n\\n    return [score, setScore, rows, setRows, level, setLevel];\\n\\n}\",\"import { useEffect, useRef } from 'react';\\n\\nexport function useInterval(callback, delay) {\\n  const savedCallback = useRef();\\n  // Remember the latest callback.\\n  useEffect(() => {\\n    savedCallback.current = callback;\\n  }, [callback]);\\n\\n  // Set up the interval.\\n  useEffect(() => {\\n    function tick() {\\n      savedCallback.current();\\n    }\\n    if (delay !== null) {\\n      const id = setInterval(tick, delay);\\n      return () => {\\n        clearInterval(id);\\n      };\\n    }\\n  }, [delay]);\\n}\\n\",\"import React from 'react';\\nimport Tetris from './components/Tetris';\\n\\nconst App = () => (\\n  <div className=\\\"App\\\">\\n    <Tetris />\\n  </div>\\n);\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/bg.2810fe6b.png\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(n,e,t){n.exports=t(27)},21:function(n,e,t){},27:function(n,e,t){\"use strict\";t.r(e);var r=t(0),o=t.n(r),a=t(8),c=t.n(a),i=(t(21),t(1)),u=function(){return Array.from(Array(20),function(){return new Array(12).fill([0,\"clear\"])})},l=function(n,e,t){for(var r=t.x,o=t.y,a=0;a<n.tetromino.length;a+=1)for(var c=0;c<n.tetromino[a].length;c+=1)if(0!==n.tetromino[a][c]&&(!e[a+n.pos.y+o]||!e[a+n.pos.y+o][c+n.pos.x+r]||\"clear\"!==e[a+n.pos.y+o][c+n.pos.x+r][1]))return!0},f=t(2),d=t(3),s=t(9),p=t.n(s);function b(){var n=Object(f.a)([\"\\n  display: flex;\\n  align-items: flex-start;\\n  padding: 40px;\\n  margin: 0 auto;\\n  max-width: 900px;\\n\\n  aside {\\n    width: 100%;\\n    max-width: 200px;\\n    display: block;\\n    padding: 0 20px;\\n  }\\n\"]);return b=function(){return n},n}function m(){var n=Object(f.a)([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background: url(\",\") #000;\\n  background-size: cover;\\n  overflow: hidden;\\n\"]);return m=function(){return n},n}var v=d.a.div(m(),p.a),h=d.a.div(b()),x=t(12),g={0:{shape:[[0]],color:\"0, 0, 0\"},I:{shape:[[0,\"I\",0,0],[0,\"I\",0,0],[0,\"I\",0,0],[0,\"I\",0,0]],color:\"80, 227, 230\"},J:{shape:[[0,\"J\",0],[0,\"J\",0],[\"J\",\"J\",0]],color:\"36, 95, 223\"},L:{shape:[[0,\"L\",0],[0,\"L\",0],[0,\"L\",\"L\"]],color:\"223, 173, 36\"},O:{shape:[[\"O\",\"O\"],[\"O\",\"O\"]],color:\"223, 217, 36\"},S:{shape:[[0,\"S\",\"S\"],[\"S\",\"S\",0],[0,0,0]],color:\"48, 211, 56\"},T:{shape:[[0,0,0],[\"T\",\"T\",\"T\"],[0,\"T\",0]],color:\"132, 61, 198\"},Z:{shape:[[\"Z\",\"Z\",0],[0,\"Z\",\"Z\"],[0,0,0]],color:\"227, 78, 78\"}},O=function(){var n=\"IJLOSTZ\"[Math.floor(Math.random()*\"IJLOSTZ\".length)];return g[n]},y=function(n,e){var t=Object(r.useState)(u()),o=Object(i.a)(t,2),a=o[0],c=o[1],l=Object(r.useState)(0),f=Object(i.a)(l,2),d=f[0],s=f[1];return Object(r.useEffect)(function(){s(0);var t=function(t){var r=t.map(function(n){return n.map(function(n){return\"clear\"===n[1]?[0,\"clear\"]:n})});return n.tetromino.forEach(function(e,t){e.forEach(function(e,o){0!==e&&(r[t+n.pos.y][o+n.pos.x]=[e,\"\".concat(n.collided?\"merged\":\"clear\")])})}),n.collided?(e(),function(n){return n.reduce(function(e,t){return-1===t.findIndex(function(n){return 0===n[0]})?(s(function(n){return n+1}),e.unshift(new Array(n[0].length).fill([0,\"clear\"])),e):(e.push(t),e)},[])}(r)):r};c(function(n){return t(n)})},[n,e]),[a,c,d]};function w(){var n=Object(f.a)([\"\\n  display: grid;\\n  grid-template-rows: repeat(\\n    \",\",\\n    calc(25vw / \",\")\\n  );\\n  grid-template-columns: repeat(\",\", 1fr);\\n  grid-gap: 1px;\\n  border: 2px solid #333;\\n  width: 100%;\\n  max-width: 25vw;\\n  background: #111;\\n\"]);return w=function(){return n},n}var j=d.a.div(w(),function(n){return n.height},function(n){return n.width},function(n){return n.width});function E(){var n=Object(f.a)([\"\\n  width: auto;\\n  background: rgba(\",\", 0.8);\\n  border: \",\";\\n  border-bottom-color: rgba(\",\", 0.1);\\n  border-right-color: rgba(\",\", 1);\\n  border-top-color: rgba(\",\", 1);\\n  border-left-color: rgba(\",\", 0.3);\\n\"]);return E=function(){return n},n}var k=d.a.div(E(),function(n){return n.color},function(n){return 0===n.type?\"0px solid\":\"4px solid\"},function(n){return n.color},function(n){return n.color},function(n){return n.color},function(n){return n.color}),S=o.a.memo(function(n){var e=n.type;return o.a.createElement(k,{type:e,color:g[e].color})}),I=function(n){var e=n.stage;return o.a.createElement(j,{width:e[0].length,height:e.length},e.map(function(n){return n.map(function(n,e){return o.a.createElement(S,{key:e,type:n[0]})})}))};function J(){var n=Object(f.a)([\"\\n  box-sizing: border-box;\\n  display: flex;\\n  align-items: center; \\n  margin: 0 0 20px 0;\\n  padding: 20px;\\n  border: 4px solid #333;\\n  min-height: 30px;\\n  width: 100%;\\n  border-radius: 20px;\\n  color: \",\";\\n  background: #000;\\n  font-family: Pixel, Arial, Helvetica, sans-serif;\\n  font-size: 0.8rem;\\n\"]);return J=function(){return n},n}var L=d.a.div(J(),function(n){return n.gameOver?\"red\":\"#999\"}),A=function(n){var e=n.gameOver,t=n.text;return o.a.createElement(L,{gameOver:e},t)};function T(){var n=Object(f.a)([\"\\n  box-sizing: border-box;\\n  margin: 0 0 20px 0;\\n  padding: 20px;\\n  min-height: 30px;\\n  width: 100%;\\n  border-radius: 20px;\\n  border: none;\\n  color: white;\\n  background: #333;\\n  font-family: Pixel, Arial, Helvetica, sans-serif;\\n  font-size: 1rem;\\n  outline: none;\\n  cursor: pointer;\\n\"]);return T=function(){return n},n}var Z=d.a.button(T()),z=function(n){var e=n.callback;return o.a.createElement(Z,{onClick:e},\"Start Game\")},C=function(){var n=Object(r.useState)(null),e=Object(i.a)(n,2),t=e[0],a=e[1],c=Object(r.useState)(!1),f=Object(i.a)(c,2),d=f[0],s=f[1],p=function(){var n=Object(r.useState)({pos:{x:0,y:0},tetromino:g[0].shape,collided:!1}),e=Object(i.a)(n,2),t=e[0],o=e[1],a=function(n,e){var t=n.map(function(e,t){return n.map(function(n){return n[t]})});return e>0?t.map(function(n){return n.reverse()}):t.reverse()},c=Object(r.useCallback)(function(){o({pos:{x:4,y:0},tetromino:O().shape,collided:!1})},[]);return[t,function(n){var e=n.x,t=n.y,r=n.collided;o(function(n){return Object(x.a)({},n,{pos:{x:n.pos.x+=e,y:n.pos.y+=t},collided:r})})},c,function(n,e){var r=JSON.parse(JSON.stringify(t));r.tetromino=a(r.tetromino);for(var c=r.pos.x,i=1;l(r,n,{x:0,y:0});)if(r.pos.x+=i,(i=-(i+(i>0?1:-1)))>r.tetromino[0].lenght)return a(r.tetromino,-e),void(r.pos.x=c);o(r)}]}(),b=Object(i.a)(p,4),m=b[0],w=b[1],j=b[2],E=b[3],k=y(m,j),S=Object(i.a)(k,3),J=S[0],L=S[1],T=function(n){var e=Object(r.useState)(0),t=Object(i.a)(e,2),o=t[0],a=t[1],c=Object(r.useState)(0),u=Object(i.a)(c,2),l=u[0],f=u[1],d=Object(r.useState)(0),s=Object(i.a)(d,2),p=s[0],b=s[1],m=[40,100,500,1200],v=Object(r.useCallback)(function(){n>0&&(a(function(e){return e+m[n-1]*(p+1)}),b(function(n){return n+1}),f(function(e){return e+n}))},[p,m,n]);return Object(r.useEffect)(function(){v()},[v,n,o]),[o,a,l,f,p,b]}(S[2]),Z=Object(i.a)(T,6),C=Z[0],N=Z[1],B=Z[2],G=Z[3],H=Z[4],K=Z[5],M=function(n){l(m,J,{x:n,y:0})||w({x:n,y:0})},P=function(){B>H+1+10&&a(1e3/(H+1)+100),l(m,J,{x:0,y:1})?(m.pos.y<1&&(s(!0),a(null)),w({x:0,y:0,collided:!0})):w({x:0,y:1,collided:!1})},R=function(n){var e=n.keyCode;d||(37===e?M(-1):39===e?M(1):40===e?(a(null),P()):38===e&&E(J,1))};return function(n,e){var t=Object(r.useRef)();Object(r.useEffect)(function(){t.current=n},[n]),Object(r.useEffect)(function(){if(null!==e){var n=setInterval(function(){t.current()},e);return function(){clearInterval(n)}}},[e])}(function(){P()},t),o.a.createElement(v,{role:\"button\",tabIndex:\"0\",onKeyDown:function(n){return R(n)},onKeyUp:function(n){return function(n){var e=n.keyCode;d||40===e&&a(1e3/(H+1)+100)}(n)}},o.a.createElement(h,null,o.a.createElement(I,{stage:J}),o.a.createElement(\"aside\",null,d?o.a.createElement(A,{gameOver:d,text:\"Game Over\"}):o.a.createElement(\"div\",null,o.a.createElement(A,{text:\"Score: \".concat(C)}),o.a.createElement(A,{text:\"Rows: \".concat(B)}),o.a.createElement(A,{text:\"Level: \".concat(H)})),o.a.createElement(z,{callback:function(){L(u()),a(1e3),j(),s(!1),N(0),G(0),K(0)}}))))},N=function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(C,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(N,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(n){n.unregister()})},9:function(n,e,t){n.exports=t.p+\"static/media/bg.2810fe6b.png\"}},[[15,1,2]]]);","extractedComments":[]}